version: "3.8"

services:
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.0-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-producer:
    build:
      context: .
      dockerfile: docker/Dockerfile.producer
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./logs/:/app/logs/

  consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile.consumer
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./logs/:/app/logs/

volumes:
  redis_data:
  rabbitmq_data:
